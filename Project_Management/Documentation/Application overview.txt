What specifically do you see as the significant barriers in current systems for people hoping to learn about the virus? How does your system seek to address them? 
We aim to create a system which provides an overview of the situation regarding the COVID-19 pandemic at a quick glance.
Given the graveness and potency of the virus, it affects everyone and knows no discrimination, Despite this being the case we have noticed that existing platforms aimed at informing the public about the pandemic have been structured in a way, which only helps people who know how to traverse websites and access tabs by finding the relevant information, making it a minefield for those who lack the savyness to understand the layout of webpages and be able to open multiple pages and traverse between them.

Making it different from existing implementations, as the vision is to create a tech friendly Chatbot feature , which focuses around information based on Ireland with a broad understanding of the situation regarding the main case categories of covid for the rest of the world.  

The chatbot aims to provide an accessible natural language interface to dynamic virus-related information, for users of any type to interact with and get the most important information regarding the pandemic, with the visualization aiding with the impact of information received and improving the overall experience of the application.
 
What alternative systems exist in the area and how is your system different? 
The existing chatbot systems which do exist in the web space, are primarily focused on educating the populace on the symptoms of COVID-19 and to track any symptoms the person may have and get advice on what to do. Rather than being an open ended tool, with which the user can interact, the existing implementations only provide information based on the list of questions that are shown to the user, Similar to a Q and A sessions, which is not tailor driven based on the users interests or queries they may have regarding the pandemic.
 
 
 
Existing systems examples include the risk assessment checker bot from HSE which identifies coronavirus Symptoms based on the answers fed by the user. 
Chatbot.com which provides instant triage and diagnosis based on the WHO guidelines and information provided by professionals. Built in collaboration with   Infermedica, a provider of AI-driven solutions for medical diagnosis. By combining ChatBot’s technology and Infermedica's expertise, the tool helps self-evaluate the risk of infection
WHO in collaboration with facebook messenger have created an intuitive bot which is able to learn from user queries and display the most relevant information that is related to the query. What we hope to achieve is a similarly fashioned bot which is able to provide the most up to date user driven data based on the epidemic and is able to function in a fluid manner requiring very little effort from the general users perspective.
What we aim to further achieve is to integrate a far better visualization tool along with the bot aiding with the impact of information received based on the query and improving the overall experience of the application.
Links:
https://www.hse.ie/chatbot/covid/chatiframe.aspx
https://www.messenger.com/t/WHO
https://www.chatbot.com/covid19-chatbot/
Discussion of alternative tools in consideration:
The tool we decided to use for Development is LEX API. 
Alternative tools: Microsoft Bot services
chatbot.com: automates sales, support, and marketing Chatbot

Discussion of alternative tools in consideration:

Alternative tools: chatbot.com: automates sales, support, and marketing Chatbot, Microsoft Bot services: What it is,
Why not suitable for the current project, Initial issue of not extensively exploring all the available tools in the marketplace since no one had the knowledge and skill of creating a bot, we had to learn how to use the tool in order to create the interactive bot from scratch. Given the initial recommendation to use Amazon Lex, we decided to completely focus on the service than spend time exploring other tools.
If given more time we would have explored all available tools in conjunction with the cloud platforms to find one that works best across all platforms.
Like Lex API , Azure Bot Service and Bot Framework provide tools to build, test, deploy, and manage intelligent bots, all in one place. The modular and extensible framework provided by the SDK, tools, templates, and AI services supports bots that use speech, understand natural language, and handle questions and answers.
The tool offers extra functionality via the addition of extra components such as LUIS, which enables the bot to process and understand natural language and understand each user Intent just like Lex. It also provides enhanced user experience via graphics menus and cards.

ADVANTAGES:

Luis has a more sophisticated learning system and there is more power in the luis.ai console than Lex, However it is not easy at all to implement.
With Lex you can easily get a content manager or another stakeholder to help you define entities and/or types and fill in user utterances
 
 
Lex is perfect for clear, easy flow conversational assistance to construct a personal assistant that can help with information within a small domain by passing simple and strict commands.
Luis has a bunch of shared sources and an existing bot framework to build a chat based on Luis’ intents and logic.

CHOICE:

Luis also has many integrations with popular social messengers, Hence, It would be the choice if we had more time to achieve the final vision of a flexible and high end user driven bot experience since this system is preferable for more complicated flows and it really is an effective solution for a chatbot with more complicated actions.

Given a huge system like Luis, for the kinds of simple actions we initially hoped to perform and demo for our application, lex was the choice. Given the restricted domain and subject of the project, to provide information on a strict subject, our goal was to initially create a bot with basic functionality to display the intent behind the vision.
