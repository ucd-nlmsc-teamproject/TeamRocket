DATA MANAGEMENT DOCUMENT 
(Progress since June 1st week until now..)
DATA TEAM : Apurva Deore, Vishal Padma
Initial research was done on various APIs such as below,
1. Johns Hopkins COVID-19 : Majorly using (https://api.covid19api.com/summary)
2. European Centre for Disease Prevention and Control: COVID-19 (https://data.gov.ie/)
3. Tweets from Twitter  (if required) 
4. Yatko API - https://api.quarantine.country/api/v1/summary/latest
5. Bing covid 19 data from github (https://raw.githubusercontent.com/microsoft/Bing-COVID-19-Data/master/data/Bing-COVID19-Data.csv)
6. Ireland related data
   http://opendata-geohive.hub.arcgis.com/datasets/4779c505c43c40da9101ce53f34bb923_0.csv?outSR={"latestWkid":3857,"wkid":102100}
   http://opendata-geohive.hub.arcgis.com/datasets/d8eb52d56273413b84b0187a4e9117be_0.csv?outSR={"latestWkid":3857,"wkid":102100}
   http://opendata-geohive.hub.arcgis.com/datasets/d9be85b30d7748b5b7c09450b8aede63_0.csv?outSR={"latestWkid":3857,"wkid":102100}

Considering that we need the data that’d answer statistical and theoretical questions asked to the Chatbot; we further divided the data into two broad sections.

I) Statistics of COVID-19 cases (total, currently active, recovered, deceased, tests done) [real time data required, updates happen regularly] -> LIVE DATA
II) Data already loaded in (symptoms of COVID-19, healthy habits to be followed, whom to contact for testing related situations...) [stored-and-forgotten scenario, doesn’t need updates] -> OLD DATA


DYNAMIC / LIVE DATA
Statistics of COVID-19 cases Per Country [Real Time Data, Updating regularly]
-Total cases
-Active cases
-Recovered cases
-Deceased cases
-Tests done
https://api.covid19api.com/summary
https://api.covid19api.com/countries


STATIC DATA
Data already loaded in and doesn’t need frequent updates.
-Symptoms of COVID-19?
-Healthy habits to be followed? 
-Whom to contact for testing related situations (some helpline numbers)


Dataset 1: John Hopkins
After having studied above APIs, currently we’ve narrowed down on the John Hopkinns API, for the reasons below:
It has all the data that is required for us to work on, ie. A lot of information about the statistics of MANY countries to start with.
It gives the information specific to countries starting from the month of January until the latest updated date, ie. If we’re getting the data for the date 16th June, we’d get the data updated until 15th June. So basically, it provides us with real time data! This could be useful when we’re plotting visualizations for various countries (to show trends that the cases follow) 
We’ve already  collected raw data pertaining to the total cases, recovered cases and deaths for about 186 countries as of now.
We’ve also collected the time series data pertaining to the same 186 countries (for each day until today, starting from 22nd Jan, until the most recent updation date of data collection)
There were some data discrepancies, where the data was not recorded or recorded as wrong. To handle this we have replaced the statistics of the previous date wherever required and in some cases the active cases for each country were recorded falsely. So we calculated the active cases on a given date(where it was recorded falsely) by subtracting the death cases and recovered cases from confirmed cases. 

Dataset 2: Yatko Data
After analyzing the data from Yatko API, we have discovered the below mentioned details about the data:
Firstly the data is a summary data which we found in Yatko API, where there are a total of 224 countries.
There are several columns in this data and most of them are similar to the john hopkins data.
The additional columns like, Death ratio, recovery ratio and tested cases in a particular country are also present in this data.
As of now we have two API which give summary for different countries but both have some different columns, so we decided to integrate both the datasets of summary and create a single dataset which will contain all the data from both the API’s.
So we have integrated the summary data for 186 countries from both the API and the final merged Dataset set has below mentioned columns for each country which will be later used in the visualization.
CountryCode
Country
Date
NewConfirmed
NewDeaths
NewRecovered
TotalConfirmed
TotalDeaths
TotalRecovered
Death_Ratio
Recovery_Ratio
Total_Cases_Tested

Dataset 3: Bing Covid 19 Data
The 3rd data which we will be looking into is the data from bing 19 covid data and here the data is collected from many different sources and the same is converted to time series data. This data records data like Confirmed cases,  deaths cases and recovered cases. Data is recorded when the first case is seen in that particular country. It also records the data for each date and for some countries the data is recorded for each date for each state/province. But some countries don't have data recorded according to the state/province. One interesting thing is that this API also records data for the whole world for each date.
As of now we have extracted the data from the API and saved into datasets  and the next we are trying to convert the data in the format of what we have for the John Hopkins data. The idea of this is to, make sure when we we have any data discrepancies in the john hopkins data, we can refer to this data and fill the missing or bad data into john hopkins from this data to maintain and fill the gap in the datasets which will be used by the chatbot or the world map.

Dataset 4: Ireland Data
We’re now considering Ireland data provided by data.gov.ie
Amongst the data, we’re focusing on statistical data, that focuses on Confirmed/Deaths/Recovered cases for the whole country. It also provides population related data (per county wise) and population-confirmed cases ratio. It also provides statistical data (time-series data) revolving around other attributes like age groups of the hospitalized cases, number of males-females affected by the virus, what was the reason for the spread(travel abroad/community transmission etc.). It also provides county-wise confirmed cases till the latest update. 
CountyName, Population, Lat,Long,ConfirmedCases,Case by Population,Date
Date, ConfirmedCovidCases, TotalConfirmedCovidCases, ConfirmedCovidDeaths, TotalCovidDeaths, ConfirmedCovidRecovered, TotalCovidRecovered,StatisticsProfileDate, Hospitalized statistics like : Aged35to44, CommunityTransmission, CloseContact, TravelAbroad	and Male - Female Affected cases


Pre-processing Part:
Apart from this real time data, we look forward to collecting static data (which requires no updation) pertaining to the symptoms of COVID, healthy habits and so on. 
We’d also be getting information from some additional APIs and integrating the required datasets to enhance the availability of data from various APIs to be put in one place.

-We need the summary data to be clean enough in the matter of Timestamp and other elements.
-We have dropped only one column from the summary data which is slug. This column was used to country names in the end of the api to collect data. 
-Next is the country data which we collected. This data has many columns which were null so they were dropped.
-The next thing was to convert the data into time series data.

Explanation for all Pre-processing done on the APIs until now.
=> Now we have two main datasets to focus on : Johns Hopkinns
-> One with global summarized statistical data for 186 countries
-> One with the time series data with information starting from the last week of Jan until the latest date of update.

For the cleaning/pre-processing we planned and did the following,
-Summarized (1 dataframe having the statistical data) (To clean this dataset, we tried to remove unwanted columns like slug, it wasn’t really required, re-arranged the columns to make a better looking dataframe, changed/modified the date column such that it represent only the DATE and not the timestamp )
-Time Series (in this, there are 4 different dfs corresponding to Active cases, deaths, confirmed cases and recovered cases)
-> Created a separate column to store the Country and another column that'd store the (Active, Confirmed, Recovered and deaths for every country)
So for every country A, there would be 4 rows dedicated to the Country A, eg Afghanistan
eg, Country Afghanistan : Confirmed
       Country Afghanistan : Active
       Country Afghanistan : Deaths
       Country Afghanistan : Recovered
So when we'd be referring to the cases in particular, we'd use two keys (Country name with the cases column) to identify the same.
We also added additional columns to separate the date into the respective DAY of the week and MONTH of the year. (Didn't consider the month, it's constant: 2020). Used the Calendar package for the same. Additional columns added separately for each country's records.

=>  We have one dataframe consisting of Yatko Raw Data
with the columns name, iso3166a2, iso3166a3, iso3166numeric, total_cases, active_cases, deaths, recovered, critical, Tested, Death_Ratio, Recovery_Ratio, change)

=>  Another main data is the Merged Dataframe: Yatko + Johns Hopkinns API
This is the merged dataframe in which we performed pre-processing and cleaning in order to make the Yatko dataframe compliant with the main dataframe (John Hopkinns).
In the pre-processing phase, we took care of the countries like Namibia (countryCode “NA” was getting counted as a null value when reading the dataset), differences between namings between the two APIs (USA/United States of America ; UK = United Kingdom), other countries like Congo had two different names assigned for same values, CAR = Central African Republic. To make the dataframe look more appealing and easier to interpret, we renamed columns and cleaned it further.
Now the merged dataframe consists of the following columns giving information for 186 countries:
CountryCode, Country, Date, NewConfirmed, NewDeaths, NewRecovered, TotalConfirmed, TotalDeaths, TotalRecovered, DeathRatio, RecoveryRatio, Total Tests Done.
For a clear and concise view of the data sources, we’ve put up a simple flow diagram to explain the main sources and what all data records/columns from them we would be using going further.


VISUALIZATIONS
-> TABLEAU
Currently we’ve been using Tableau for our visualizations. But, going ahead, we would also try and see for other feasible visualization tools which would better suit our project.
We’ve decided to make the following main types of visualizations
1) Map related visualizations (when a user hovers over a particular country, the map would show the user statistics for that country (ie. Details about active, deceased, recovered and confirmed cases))
This would be displayed on the main webpage and uses the Summarized data which has info about cases for all countries affected by COVID-19.

2) Trend graph kind of visualization that’d show users the trend followed by a particular country. Basically 4 trend lines in one graph. (representing active, deceased, recovered and confirmed cases trend-lines).
Two done so far : One worldwide (trends for the world’s total cases), One country-wise (filter on the country)

3) To show top 5/top 10 countries with respect to the cases as for recovered, confirmed and deceased cases. (considering the world-wide summarized cases dataset)

-> Flourish
Flourish is a tool that allows to create visualization dashboards/storytelling scenarios in a more fancy way. It provides certain map visualizations, to name some: survey maps, projection maps. We tried to create a map visualization similar to that done in Tableau to sort of compare which one is better. Some visualization we tried were as follows:

-> PowerBI
Created map-based visualizations for the summary data from Johns Hopkins API, and after the front end team embedded it onto the web-pages, we were able to compare it's functionality against the one's initially made using Tableau. Found that the one's made by Tableau fit better and look better than the PowerBI ones.




External Links!!
1. https://api.covid19api.com/countries (Country Details)
2. https://api.covid19api.com/country/south-africa?from=2020-03-01T00:00:00Z&to=2020-04-01T00:00:00Z (Country Status Details)
3. https://api.covid19api.com/total/country/china (Total stats/details per country)
4. https://api.covid19api.com/all (Everything about COVID-19)
5. https://api.covid19api.com/summary (Summary of stats like total cases, recovered cases, deaths)
6. https://github.com/CSSEGISandData/COVID19/tree/master/csse_covid_19_data/csse_covid_19_time_series  (Global Data (Tallied records: Total cases, Recovered, Deaths) Time Series Data)
7. https://api.quarantine.country/api/v1/summary/latest (Yatko API)
8. https://raw.githubusercontent.com/microsoft/Bing-COVID-19-Data/master/data/Bing-COVID19-Data.csv (Bing Dataset)

